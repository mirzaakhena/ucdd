package interactor

import (
	"context"
	"testing"

	"{{PackagePath}}/backend/datasource/mocks"
	"{{PackagePath}}/backend/usecase/{{LowerCase .Name}}/inport"
	"{{PackagePath}}/backend/usecase/{{LowerCase .Name}}/outport"

	"github.com/stretchr/testify/assert"
)

type mockTrx struct{}

var mockTrxObj = mockTrx{}

func (*mockTrx) Commit() {

}

func (*mockTrx) Rollback() {

}

func Test_Normal(t *testing.T) {

	ctx := context.Background()

	req := inport.{{PascalCase .Name}}Request{}

	outputPort := mocks.{{PascalCase .Name}}Outport{}

	dbContext := context.Background()

	outputPort.On("GetDBWithTransaction", ctx).Return(dbContext, &mockTrxObj)

  {{range .Outports}}
	outputPort.On("{{PascalCase .Name}}", dbContext, outport.{{PascalCase .Name}}Request{ {{range .RequestFields}}
		{{PascalCase .}}: "", {{end}}
	}).Return(nil, nil) 
  {{end}}
  
	res, err := New{{PascalCase .Name}}Inport(&outputPort).Handle(ctx, req)

	assert.Nil(t, err)

	assert.Equal(t, &inport.{{PascalCase .Name}}Response{ {{range .Inport.ResponseFields}}
		{{PascalCase .}}: "", {{end}}		
	}, res)

}
