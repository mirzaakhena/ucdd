package production

import (
	"context"

	"github.com/jinzhu/gorm"
	"{{PackagePath}}/backend/shared/database"
	"{{PackagePath}}/backend/usecase/{{LowerCase .Name}}/outport"
)

// New{{PascalCase .Name}}Outport ...
func New{{PascalCase .Name}}Outport(db *gorm.DB) outport.{{PascalCase .Name}}Outport {
	return &{{CamelCase .Name}}Outport{
		database.GormDatabase{
			DB: db,
		},		
	}
}

type {{CamelCase .Name}}Outport struct {
	database.GormDatabase
}
{{range .Outports}}
func (_r *{{CamelCase $.Name}}Outport) {{PascalCase .Name}}(ctx context.Context, req outport.{{PascalCase .Name}}Request) (*outport.{{PascalCase .Name}}Response, error) {

	// gormDB := database.ExtractGormDB(ctx)
	{{range .RequestFields}}
	// req.{{.}} {{end}}

	return &outport.{{PascalCase .Name}}Response{ {{range .ResponseFields}}
		{{PascalCase .}}: "", {{end}}
	}, nil

}
{{end}}