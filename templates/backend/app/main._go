package main

import (	
	"{{PackagePath}}/backend/controller/consumer"
	"{{PackagePath}}/backend/controller/restapi"
	datasource "{{PackagePath}}/backend/datasource/real"
	"{{PackagePath}}/backend/shared/config"
	"{{PackagePath}}/backend/shared/log"
	"bitbucket.org/kfc/loyaltyengine2/backend/shared/messagebroker"

	{{range .Usecases}}
	{{LowerCase .Name}}UC "{{PackagePath}}/backend/usecase/{{LowerCase .Name}}/interactor" {{end}}
	
	"github.com/gin-gonic/gin"
	"github.com/jinzhu/gorm"
	_ "github.com/jinzhu/gorm/dialects/sqlite" //
	_ "github.com/jinzhu/gorm/dialects/mysql" //
)

func main() {	

	cf := config.NewDefaultConfig("$GOPATH/src/{{PackagePath}}/backend", "config")

	log.UseRotateFile(cf.GetString("log.path", "."), cf.GetString("application.name", "{{AppName}}"), cf.GetInt("log.max_age", 14))

	log.Info("Apps is start running")

	db, err := gorm.Open(cf.GetString("database.dialect", "sqlite3"), cf.GetString("database.connection_string", "database.db"))
	if err != nil {
		panic(err)
	}
	db.LogMode(cf.GetBool("database.log", false))

	messagebroker.RunConsumer(false, cf.GetString("messagebroker.nsqd_url", ""), []messagebroker.ConsumerHandler{
		{{range .Usecases}}
		messagebroker.ConsumerHandler{
			Topic: "{{LowerCase .Name}}", Channel: "1",
			FunctionHandler: consumer.{{PascalCase .Name}}Consumer({{LowerCase .Name}}UC.New{{PascalCase .Name}}Inport(), datasource.New{{PascalCase .Name}}Outport(db)),
		}, {{end}}
	})

	r := gin.Default()

	{{range .Usecases}}
	r.POST("/{{LowerCase .Name}}", restapi.{{PascalCase .Name}}API({{LowerCase .Name}}UC.New{{PascalCase .Name}}Inport(), datasource.New{{PascalCase .Name}}Outport(db))) {{end}}
	
	r.Run()
}
